* {
	box-sizing: border-box;
}
p {
	color: rgb(50, 43, 33);
	padding: 5px;
	margin: 5px;
}
body {
	background: linear-gradient(to right, rgb(249, 250, 244), rgb(69, 131, 102));

	width: 100%;
	height: 100%;
	min-height: 200vh;
}

.box-1 {
	background: linear-gradient(to left, rgb(132, 122, 110), rgb(69, 215, 217));

	/* object-fit: contain; */
}
.box-2 {
	background: linear-gradient(
		to bottom right,
		rgb(243, 159, 233),
		rgb(15, 141, 213)
	);
	position: fixed;
	top: 0;
	right: 0;
	z-index: -1;
}
.box-3 {
	background: linear-gradient(to top left, rgb(19, 183, 95), rgb(180, 213, 15));
	float: left;
}
.clear-fix::after {
	content: '';
	display: block;
	clear: both;
}

.box {
	width: 45%;
	height: fit-content;
	min-height: 50vh;
	/* display: inline-block; */

	border: 2px solid rgb(137, 129, 129);
	margin: 10px;
}
.clear {
	clear: both;
}

.container-2 {
	border: 3px solid lightblue;
	display: flex;
	/* justify-content: space-between; */
	justify-content: center;

	min-height: 100vh;
	/* align-items: flex-end ; */
	flex-wrap: wrap;
	align-items: center;
	align-content: center;
}
.box-0 {
	width: 5rem;
	height: 5rem;
	background: linear-gradient(to right, rgb(249, 250, 244), rgb(69, 131, 102));
	background: gold;
	margin: 1rem;
	flex-grow: 1;
}
.box-0-0 {
	/* flex-grow: 2; */
	background: red;
	/* align-self: flex-end ; */
}

.grid-container {
	/* grid-template-rows: 100px 100px 100px;
	grid-template-columns: 100px 100px; */
	display: grid;
	/* first row 100px second row auto and changes based on size last row is fixed  
	grid template the first part is for rows and second part is for columns 
	we can sperate it using grid-row for rows and grid-column for columns */

	grid-template: 100px auto 100px /30fr 70fr;
	border: 3px solid purple;
	justify-items: stretch;
	align-items: stretch;
	/* justify-content: center;
	align-content: center; */
	min-height: 100vh;
	row-gap: 10px;
	column-gap: 10px;
	/* gap: 10px 1opx;  */
	grid-template-areas:
	 'header header' 'sidebar main-content' 'footer footer';
}

.g-box {
	/* width: 5rem;
	height: 5rem; */
	background: linear-gradient(
		to top right,
		rgb(231, 154, 0),
		rgb(226, 242, 81)
	);
}
.g-box-1 {
	/* 1/3 means that this box will take coulumns from 1 to 3 */
	grid-column: 1/3;
	/* this aslo couldl be applied using names by creating grid-template-areas in the container
	naming each cell then locate the box at certain names are as below */
	grid-area: header;
}
.card{
	border-radius: 8px;
	padding: 1rem;
	backdrop-filter: blur(20px);
	background: rgba(203, 28, 28, 0.5);
	box-shadow: 0 1px 8px 0 rgba(0,0,0,0.25);
	border: 1px solid rgba(255,255,255,0.3);
}

.card-container{
	display: flex;
	flex-direction: column;

}
/* this will target the second occurance of elemnt 
of class card */
.card:nth-last-of-type(1){
	background: blueviolet;
}

 
/* with media quiers we can make conditions and apply differnt style  */
@media screen and (min-width : 600px) {
	.card-container {
		flex-direction: row;
 	} 
}

@media screen and (min-width : 800px) {
	.card-container {
		flex-direction: row;
 	} 

	 .card{
		 background: yellow ;
	 }

	
}
